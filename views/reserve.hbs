<!DOCTYPE html>
<html>
  <head>
      
    <link rel="stylesheet" href="/stylesheets/bootstrap.css">
    <link rel="stylesheet" href="/stylesheets/style.css"> 
      
    <style>
       #map {
        height: 400px;
        width: 100%;
       }
      /* Optional: Makes the sample page fill the window. */
        
      #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
      }

      #infowindow-content .title {
        font-weight: bold;
      }

      #infowindow-content {
        display: none;
      }

      #map #infowindow-content {
        display: inline;
      }

      .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
      }

      //#pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
      }

      .pac-controls {
        display: inline-block;
        padding: 5px 11px;
      }

      .pac-controls label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
      }
      #target {
        width: 345px;
      }
        
      .labelClass{
         margin-bottom = 10px;   
      }
        
    </style>
  </head>
  <body>
      {{#if errors}}
        {{#each errors}}
            <div class="alert alert-danger">{{msg}}</div>
        {{/each}}
      {{/if}}
      
      <form method="post" action="/users/reserve">
      <div class="submitReservation">
            <h2 class="page-header">Reserve</h2>
      </div>
      <div class="labelClass">
        <label>Theme</label>
      </div>
      <div class="form-group">
        <input type='text' placeholder="Select a theme" name="theme">
      </div>
      <div class="labelClass">
        <label>Date</label>
      </div>
      <div class="form-group">
        <input type='text' placeholder="MM/dd/YY" name="date">
      </div>
      <div class="labelClass">
        <label>Time</label>
      </div>
      <div class="form-group">
        <input type="text" placeholder="AM/PM" name="time">
      </div>
      <button type="submit" class="btn btn-default">Book</button>
    <div><input id="pac-input" class="controls" type="text" placeholder="Select a restaurant" name="place"></div>
    <div id="map"></div>
    <div id="infowindow-content">
      <span id="place-name"  class="title"></span><br>
      Place ID <span id="place-id"></span><br>
      <span id="place-address"></span>
    </div>
    <div class="form-group">
        <input id="long", placeholder="Place Longitude", name="long">
        <input id="lat", placeholder="Place Latitude", name="lat">
    </div>
      </form>
    <script>                         
        function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -33.8688, lng: 151.2195},
          zoom: 13,
          mapTypeId: 'roadmap'
        });
            
        var input = document.getElementById('pac-input');
        //var searchBox = new google.maps.places.SearchBox(input);
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var infowindow = new google.maps.InfoWindow();
        var infowindowContent = document.getElementById('infowindow-content');
        infowindow.setContent(infowindowContent);
        var marker = new google.maps.Marker({
          map: map
        });
        marker.addListener('click', function() {
          infowindow.open(map, marker);
        });

        var place;  
            
         map.addListener('click', function() {
          place = autocomplete.getPlace();
          if (!place.geometry) {
            return;
          }  
            map.setCenter(place.geometry.location);
            map.setZoom(17);

          // Set the position of the marker using the place ID and location.
          marker.setPlace({
            placeId: place.place_id,
            location: place.geometry.location
          });
          marker.setVisible(true);

          infowindowContent.children['place-name'].textContent = place.name;
          infowindowContent.children['place-id'].textContent = place.place_id;
          infowindowContent.children['place-address'].textContent = place.formatted_address;
          infowindow.open(map, marker);
             //place.location.lng(); place.location.lat();
          document.getElementById('long').value = place.geometry.location.lng();
          document.getElementById('lat').value = place.geometry.location.lat();
        });
    }
    //</script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDfjyLqMlnj40ea7gAo2MJq3WjHc5BtfT8&libraries=places&callback=initMap">
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDfjyLqMlnj40ea7gAo2MJq3WjHc5BtfT8&libraries=places&callback=initAutocomplete"
         async defer></script>
  </body>
</html>
